% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compensation_autofluorescence_kaluza.R
\name{compensation_autofluorescence_kaluza}
\alias{compensation_autofluorescence_kaluza}
\title{Compensate a flowframe as Kaluza does}
\usage{
compensation_autofluorescence_kaluza(
  flowframe,
  spillmat,
  autofluorescence_vector,
  add_suffix = "-A",
  calculate_absolute_values_from_ff = TRUE,
  remove_spillover_keywords = TRUE
)
}
\arguments{
\item{flowframe}{A compensated flowframe (flowCore package)}

\item{spillmat}{Spillover matrix. If a string, it is assumed to be the name of the spillover matrix in the flowframe,
extracted by \code{flowCore::spillover(flowframe)[[spillmat]]}.}

\item{autofluorescence_vector}{A vector of autofluorescence values, one for each channel in the flowframe.
Would usually be 0, must be absolute values.}

\item{add_suffix}{The suffix to add to the autofluorescence vector and the spillover matrix dimension names to match the flowframe.
Usually, the autofluorescence vector and the spillover matrix are named without suffix,
e.g. FL1, FL2, ..., FLn but the flowframe has suffixes, e.g. FL1-A, FL2-A, ..., FLn-A.}

\item{calculate_absolute_values_from_ff}{If \code{TRUE}, the autofluorescence vector is multiplied by the maximum value of the flowframe to get the absolute values. Otherwise, the autofluorescence vector is used as is.}

\item{remove_spillover_keywords}{If \code{TRUE}, the "spillover", "SPILL" and "$SPILLOVER" keywords are removed from the flowframe.
Otherwise if the flowframe is later saved to a .fcs file, the (OLD!, not "'spillmat")
spillover matrix will be saved to the .fcs file.
This is not a problem if the flowframe is only used in R, but a major problem
if the flowframe is loaded into Kaluza because then the saved spillover matrix
will be used ADDITIONALLY for compensation.}
}
\description{
Comparing this compensation_matrix to Kaluza's compensation matrix shows that the values are the same but transposed.

Additionally, Kaluza has an autofluorescence parameter, which seems to be 0.03 for all channels within Kaluza.
The documentation says that the value is "0.0309". The 0.03 is only visual and can be seen by changing the number of decimals.

In my dissertation (1.4.1.1. Compensation) I describe the compensation workflow. Essentially the formula is:
observed = spillover \%\emph{\% truth + autofluorescence
Then
truth = spillover^-1 \%}\% (observed - autofluorescence)

IN CONTRAST, Kaluza does something different. See
- https://www.beckman.com/search#q=Gallios\%20Flow\%20Cytometer&t=coveo-tab-techdocs
- B46171AB.pdf: "Protocols/Compensation/Accounting for Autofluorescence"
What they do is:
\enumerate{
\item Subtract autofluorescence (=324) from the observed data
\item Apply the compensation matrix
\item Add the autofluorescence back
}

Additionally, the autofluorescence value is established by the following (see my email conversation with Beckman Coulter, Ernest Anderson):

\if{html}{\out{<div class="sourceCode">}}\preformatted{ Kaluza has an autofluorescence vector available, if you press the button to show it.
 The default value that youâ€™ll see is 0.03. If you expand the visible digits you can get
 this to 0.0309. How does this relate to the values I shared above? Kaluza (for historical reasons)
 chooses to express autofluorescence as a percent. So using the numbers above we can derive the
 same value. The standard value, 324 divided by the full range, times 100 gives you the autofluorescence
 as a percentage:

     A = 324 / 1048575 * 100 = 0.03089907 => rounds to 0.0309
}\if{html}{\out{</div>}}
}
\examples{
ff <- simulate_ff(columns = paste0("FL", 1:3, "-A"), flowcore = TRUE)

# Define a fake spillover matrix (normally extracted from FCS keywords)
spill <- matrix(
    c(
        1, 0.1, 0.05,
        0.02, 1, 0.03,
        0.01, 0.05, 1
    ),
    nrow = 3, ncol = 3, byrow = TRUE
)
# Simulate a spillover matrix which is necessarily positive-definite
spill_pd <- base::crossprod(spill, spill) 
colnames(spill_pd) <- rownames(spill_pd) <- paste0("FL", 1:3)

# Define autofluorescence as percentage of full scale (default: 1048575)
autofluorescence_percent <- c(FL1 = 0.0309, FL2 = 0.0309, FL3 = 0.0309)

# Apply Kaluza-style compensation
ff_kaluza <- compensation_autofluorescence_kaluza(
    flowframe = ff,
    spillmat = spill_pd,
    autofluorescence_vector = autofluorescence_percent,
    add_suffix = "-A", # Simulated ff columns are like "FL1-A"
    calculate_absolute_values_from_ff = TRUE
)
}
