% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_compare_alignment.R
\name{plot_compare_alignment}
\alias{plot_compare_alignment}
\title{Plot Comparison of Feature Alignments Across Devices and Scaling Methods}
\usage{
plot_compare_alignment(
  dt_listlist,
  relevant_features = NULL,
  n_resolution = 1000,
  scale_column_funs = list(default = function(x) {
     asinh(x * 100)
 }, raw =
    function(x) {
     asinh(x/1000)
 }),
  ylim = c(0, 0.4),
  faceting = c("horizontal", "vertical")
)
}
\arguments{
\item{dt_listlist}{A list of lists of data.tables. The outer list corresponds to the alignment method, the inner list device (which should be aligned). The innermost element is a data.table of feature measurements.}

\item{relevant_features}{Character vector of feature names to plot, referring to (some of) the column names of the data.tables. If NULL, all features present in the data are plotted.}

\item{n_resolution}{Integer specifying the number of points to use for density approximation (default: 1000).}

\item{scale_column_funs}{Named list of functions to scale feature values. Each function should accept a numeric vector and return a transformed numeric vector.}
}
\value{
A ggplot object showing density curves for each feature, device, and scaling method.
}
\description{
This function visualizes the density distributions of selected features across multiple devices and scaling methods.
It takes a nested list of data tables, applies specified scaling functions, computes density estimates, and plots
the results using ggplot2 with faceting by feature and scaling method.
}
\examples{
# Example usage:
# plot_compare_alignment(dt_listlist, relevant_features = c("feature1", "feature2"))

}
