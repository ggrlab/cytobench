% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_compare_alignment.R
\name{plot_compare_alignment}
\alias{plot_compare_alignment}
\title{Plot Comparison of Feature Alignments Across Devices and Scaling Methods}
\usage{
plot_compare_alignment(
  dt_listlist,
  relevant_features = NULL,
  n_resolution = 1000,
  scale_column_funs = list(default = function(x) asinh(x * 100), raw = function(x)
    asinh(x/1000)),
  ylim = c(0, 0.4),
  faceting = c("horizontal", "vertical")
)
}
\arguments{
\item{dt_listlist}{A named list of lists of \code{data.table}s. The outer list corresponds to the scaling or
alignment method (e.g. "raw", "minmax"). The inner list groups by device name (e.g., "navios", "cytoflex") - which should usually be aligned.
Each innermost element is a \code{data.table} of feature measurements.}

\item{relevant_features}{Character vector of feature names (column names) to include in the plot.
If \code{NULL}, all features found in the data are used.}

\item{n_resolution}{Integer. Number of x-values per density curve (default: 1000).}

\item{scale_column_funs}{Named list of transformation functions to apply to the feature values before
computing densities. Each function must take a numeric vector and return a transformed numeric vector.}

\item{ylim}{Numeric vector of length 2. Y-axis limits (e.g., c(0, 0.4)). Default: \code{c(0, 0.4)}.}

\item{faceting}{Either \code{"horizontal"} or \code{"vertical"}. Determines how ggplot facets are arranged.}
}
\value{
A \code{ggplot2} object showing overlaid density plots, faceted by feature and scaling method.
}
\description{
Visualizes the density distributions of selected features across multiple devices and scaling methods.
Each method-device-feature combination is plotted using an estimated density function. Useful to assess
alignment consistency or transformation effects across datasets.
}
\details{
It takes a nested list of data tables, applies specified scaling functions, computes density estimates, and plots
the results using ggplot2 with faceting by feature and scaling method.
}
\examples{
# Assuming dt_listlist is a nested list of data.tables with aligned features:
# plot_compare_alignment(dt_listlist, relevant_features = c("FL1-A", "FL2-A"))

# Mock data: create 2 scaling methods, each with 2 devices, each with 3 features and 500 values
set.seed(123)
dt_listlist <- list(
    "raw" = list(
        "device1" = data.table(A = rnorm(500, 1), B = rnorm(500, 5), C = rnorm(500, 10)),
        "device2" = data.table(A = rnorm(500, 1.2), B = rnorm(500, 4.8), C = rnorm(500, 9.5))
    ),
    "default" = list(
        "device1" = data.table(A = rnorm(500, 1), B = rnorm(500, 5), C = rnorm(500, 10)),
        "device2" = data.table(A = rnorm(500, 1.1), B = rnorm(500, 5.1), C = rnorm(500, 10.5))
    )
)

# Call the function with this mock data
p <- plot_compare_alignment(
    dt_listlist = dt_listlist,
    relevant_features = c("A", "B", "C"),
    ylim = NA,
    scale_column_funs = list("default" = function(x) {
        x
    })
)
print(p)

fs <- simulate_fs(
    n_samples = 2,
    flowcore = FALSE,
    ncells = 250,
    columns = c("FL1-A", "FL2-A", "FL3-A")
)
fs_example <- list(
    "raw" = fs,
    "modified" = lapply(fs, function(x) {
        (x + 5) * 1.5
    })
)
p2 <- plot_compare_alignment(
    fs_example,
    ylim = NA,
    scale_column_funs = list(
        "default" = function(x) {
            x
        }
    )
)
print(p2)
p3 <- plot_compare_alignment(
    fs_example,
    ylim = NA,
    scale_column_funs = list(
        "raw" = function(x) {
            x
        },
        "modified" = function(x) {
            log10(x)
        }
    )
)
print(p3)

}
\keyword{cytometry}
\keyword{relativisation}
